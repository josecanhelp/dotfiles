#!/bin/bash
# Creator: Phil Cook
# Modified: Jose Soto

osx_major_version=$(sw_vers -productVersion | cut -d. -f1)
osx_minor_version=$(sw_vers -productVersion | cut -d. -f2)
osx_patch_version=$(sw_vers -productVersion | cut -d. -f3)
osx_patch_version=${osx_patch_version:-0}
osx_version=$((${osx_major_version} * 10000 + ${osx_minor_version} * 100 + ${osx_patch_version}))

brew_prefix=$(brew --prefix | sed 's#/#\\\/#g')

brew_array=("5.6","7.0","7.1","7.2","7.3","7.4")
php_array=("php@5.6" "php@7.0" "php@7.1" "php@7.2" "php@7.3" "php@7.4")
valet_support_php_version_array=("php@5.6" "php@7.0" "php@7.1" "php@7.2" "php@7.3" "php@7.4")
php_installed_array=()
php_version="php@$1"
php_opt_path="$brew_prefix\/opt\/"

php5_module="php5_module"
php7_module="php7_module"

php_module="$php5_module"

# Has the user submitted a version required
if [[ -z "$1" ]]; then
    echo "usage: sphp version [-s|-s=*] [-c=*]"
    echo
    echo "    version    one of:" ${brew_array[@]}
    echo "    -s=*       skip change of mod_php on valet restart i.e (valet)"
    echo "    -c=*       switch a specific config (valet)"
    echo
    exit
fi

if [[ $(echo "$php_version" | sed 's/^php@//' | sed 's/\.//') -ge 70 ]]; then
    php_module="$php7_module"
fi

valet_restart=0

# Check if valet is already install
hash valet 2>/dev/null && valet_installed=1 || valet_installed=0

POSITIONAL=()

# Check for skip & change flag
while [[ $# -gt 0 ]]; do
    key="$1"
    case "$key" in
        # This is a flag type option. Will catch either -s or --skip
        -s|-s=*|--skip=*)
        if [ "${1#*=}" == "valet" ]; then
            valet_restart=0
        fi
        ;;

        # This is a flag type option. Will catch either -c or --change
        -c=*|--change=*)
             [[ "$1" == *"valet"* ]] && valet_restart=1 || valet_restart=0
        ;;

        *)
        POSITIONAL+=("$1") # save it in an array for later
        ;;
    esac
    # Shift after checking all the cases to get the next option
    shift
done

# What versions of php are installed via brew
for i in ${php_array[*]}; do
    if [[ -n "$(brew ls --versions "$i")" ]]; then
        php_installed_array+=("$i")
    fi
done

# Check if php version support via valet
if [[ (" ${valet_support_php_version_array[*]} " != *"$php_version"*) && ($valet_restart -eq 1) ]]; then
    echo "Sorry, but $php_version is not support via valet"
    exit
fi

# Check that the requested version is supported
if [[ " ${php_array[*]} " == *"$php_version"* ]]; then
    # Check that the requested version is installed
    if [[ " ${php_installed_array[*]} " == *"$php_version"* ]]; then

        # Stop valet service
        if [[ ($valet_installed -eq 1) && ($valet_restart -eq 1) ]]; then
            echo "Stop Valet service"
            valet stop
        fi

        # Switch Shell
        echo "Switching to $php_version"
        echo "Switching your shell"
        for i in ${php_installed_array[@]}; do
            brew unlink $i
        done
        brew link --force "$php_version"

        # Switch valet
        if [[ $valet_restart -eq 1 ]]; then
            if [[ valet_installed -eq 1 ]]; then
                valet restart
             else
               echo "valet doesn't installed in your system, will skip restarting valet service"
            fi
        fi

	echo ""
        php -v
        echo ""

        echo "All done!"
    else
        echo "Sorry, but $php_version is not installed via brew. Install by running: brew install $php_version"
    fi
else
    echo "Unknown version of PHP. PHP Switcher can only handle arguments of:" ${brew_array[@]}
fi
